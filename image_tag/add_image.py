# -*- coding: utf-8 -*-
"""add_image.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1iuqDDS_gfc7OytBXeHidwqGxR7tSTEBd
"""

import pickle, faiss, numpy as np, shutil
from pathlib import Path
from PIL import Image
from models import generate_caption, kw_model, image_embedding

from pathlib import Path

def get_data_dir():
    try:
        # if running as script
        return Path(__file__).resolve().parent
    except NameError:
        # if running interactively
        return Path.cwd()

# --- usage ---
DATA_DIR = get_data_dir()
IMG_DIR = DATA_DIR / "images"

def add_image(image_path):
    # --- load existing assets
    index = faiss.read_index(str(DATA_DIR / "image_index.faiss"))
    with open(DATA_DIR / "metadata_with_paths.pkl", "rb") as f:
        metadata = pickle.load(f)

    # --- prepare image
    img = Image.open(image_path).convert("RGB")
    caption = generate_caption(img)
    keywords = kw_model.extract_keywords(caption, keyphrase_ngram_range=(1,2),
                                         stop_words="english", top_n=5)
    tags = [k[0] for k in keywords]

    emb = image_embedding(img)
    index.add(emb)

    # save image into repo folder
    new_id = len(metadata)
    dest_path = IMG_DIR / f"{new_id}.jpg"
    shutil.copy(image_path, dest_path)

    metadata.append({
        "id": new_id,
        "caption": caption,
        "tags": tags,
        "image_path": str(dest_path)
    })

    # --- persist
    faiss.write_index(index, str(DATA_DIR / "image_index.faiss"))
    with open(DATA_DIR / "metadata_with_paths.pkl", "wb") as f:
        pickle.dump(metadata, f)

    print(f"Added image {new_id}: {caption} â†’ {tags}")
    return new_id

if __name__ == "__main__":
    import sys
    image_path = sys.argv[1]
    add_image(image_path)
